(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{533:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"一、基本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、基本"}},[t._v("#")]),t._v(" 一、基本")]),t._v(" "),a("h2",{attrs:{id:"_1-1、数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、数据类型"}},[t._v("#")]),t._v(" 1-1、数据类型")]),t._v(" "),a("p",[t._v("基本数据类型")]),t._v(" "),a("ul",[a("li",[t._v("boolean")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("number")]),t._v(" "),a("li",[t._v("string")]),t._v(" "),a("li",[t._v("symbol")]),t._v(" "),a("li",[t._v("bigInt")])]),t._v(" "),a("p",[t._v("引用数据类型：对象 Object，包含")]),t._v(" "),a("ul",[a("li",[t._v("普通对象-Object；")]),t._v(" "),a("li",[t._v("数组对象-Array；")]),t._v(" "),a("li",[t._v("正则对象-RegExp；")]),t._v(" "),a("li",[t._v("日期对象-Date；")]),t._v(" "),a("li",[t._v("数学函数-Math；")]),t._v(" "),a("li",[t._v("函数对象-Function；")])]),t._v(" "),a("h3",{attrs:{id:"_1-1-1、示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1、示例"}},[t._v("#")]),t._v(" 1-1-1、示例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子君'")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'君子'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出子君")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子君'")]),t._v("\nd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'君子'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出君子")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于第一个输出，Symbol()函数会返回「symbol」类型的值，而Symbol函数传的参数仅仅是用于标识的，不会影响值的唯一性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对于第二个输出， 因为e和f都是对象，而对象的key只能是数值或字符，所以会将对象转换为字符，对象的toString方法返回的是[object Object], 所有输出的是君子")]),t._v("\n")])])]),a("h2",{attrs:{id:"_1-x、注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x、注意事项"}},[t._v("#")]),t._v(" 1-X、注意事项")]),t._v(" "),a("h3",{attrs:{id:"_1-x-1、null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-1、null"}},[t._v("#")]),t._v(" 1-X-1、null")]),t._v(" "),a("p",[t._v("虽然 typeof null 会输出 object，但这只是 JS 存在的一个悠久 Bug：")]),t._v(" "),a("ul",[a("li",[t._v("JS 的最初版本中使用是 32 位系统，为性能考虑使用低位1-3位存储变量的类型信息，000 开头代表是对象然而 null 表示为全零；")]),t._v(" "),a("li",[t._v("比如：000 —> 对象；010 —> 浮点数；100 —> 字符串；110 —> 布尔值；")]),t._v(" "),a("li",[t._v("然而：null 的所有机器码均为 0，故导致了 typeof 误判，且现有代码已经严重依赖这一bug表现，已永远不可能被修复：")]),t._v(" "),a("li",[t._v("详情：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof")])]),t._v(" "),a("p",[t._v("与 undefiend 区别：")]),t._v(" "),a("ul",[a("li",[t._v('前者表示一个"无"的对象，也即**'),a("u",[a("em",[t._v("此处不应该有值")])]),a("strong",[t._v("；而 undefined 表示")]),a("u",[a("em",[t._v("未定义")])]),t._v("**。")]),t._v(" "),a("li",[t._v("在转换为数字时结果不同，Number(null) 为 0，而 undefined 为 NaN；")])]),t._v(" "),a("p",[t._v("使用场景上：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("前者作为函数的参数，表示该函数的参数不是对象；")])]),t._v(" "),a("li",[a("p",[t._v("前者作为对象原型链的终点；")])]),t._v(" "),a("li",[a("p",[t._v("后者在变量被声明但没有赋值时，就等于 undefined；")])]),t._v(" "),a("li",[a("p",[t._v("后者调用函数时，应该提供的参数没有提供，该参数等于 undefined；")])]),t._v(" "),a("li",[a("p",[t._v("后者对象没有赋值属性，该属性的值为 undefined；")])]),t._v(" "),a("li",[a("p",[t._v("后者函数没有返回值时，默认返回 undefined；")])])]),t._v(" "),a("h3",{attrs:{id:"_1-x-2、基本包装类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-2、基本包装类型"}},[t._v("#")]),t._v(" 1-X-2、基本包装类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '1'.toString() 之所以能执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是因为语句运行的过程中做了这样几件事情:")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、创建 Object 类实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意: 目前 ES6 规范不建议用 new 来创建基本类型的包装类；而由于 Symbol 和 BigInt 的出现，对它们调用 new 都会报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、调用实例方法")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、执行完方法立即销毁这个实例")]),t._v("\ns "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("过程体现 "),a("strong",[a("u",[t._v("基本包装类型")])]),t._v(" 的性质，而基本包装类型恰恰属于基本数据类型，包括 Boolean、Number、String；")]),t._v(" "),a("h3",{attrs:{id:"_1-x-3、精度问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-3、精度问题"}},[t._v("#")]),t._v(" 1-X-3、精度问题")]),t._v(" "),a("p",[t._v("⼗进制整数转⼆进制⽅法：除2取余；⼗进制⼩数转⼆进制⽅法：乘2除整 ⼗进制0.1转换成⼆进制，乘2取整过程：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4")]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.6")]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4")]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("0.1的二进制格式是：0.0001100011....，是一个"),a("strong",[t._v("二进制无限循环小数")]),t._v("，但计算机内存有限，不能用储存所有的小数位数，所以会在某个精度点直接舍弃；代价是，0.1 在计算机内部根本就不是精确的 0.1，而是一个有舍入误差的 0.1；当代码被编译或解释后，0.1已经被四舍五入成一个与之很接近的计算机内部数字，以至于计算还没开始，一个很小的舍入错误就已产生了。这也就是 0.1 + 0.2 不等于0.3 的原因；")]),t._v(" "),a("p",[t._v("注意：而 0.1 + 0.1 为何等于0.2 是：两个有舍⼊误差的值在求和时，相互抵消，但这种负负得正，相互抵消不⼀定都可靠，当这两个数字是⽤不同⻓度数位来表示的浮点数时，舍⼊误差可能不会相互抵消；⼜如：0.1 + 0.3 ，结果其实并不是 0.4，但 0.4 是最接近真实结果的数，⽐其它任何浮点数都更接近；许多语⾔也就直接显示结果为 0.4 了，⽽不展示⼀个浮点数的真实结果；")]),t._v(" "),a("p",[t._v("注意：⼆进制能精确地表示位数有限且分⺟是2的倍数的⼩数，⽐如 0.5(1/2)，0.5 在计算机内部就没有舍⼊误差；故 0.5 + 0.5 === 1;")]),t._v(" "),a("h3",{attrs:{id:"_1-x-3-1、精度现状"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-3-1、精度现状"}},[t._v("#")]),t._v(" 1-X-3-1、精度现状")]),t._v(" "),a("p",[t._v("JS中，所有的数字都以双精度 64 位浮点格式表示，这导致 JS 中的 Number 无法精确表示非常大的整数，还会将非常大的整数四舍五入；")]),t._v(" "),a("p",[t._v("即 JS 的 Number 类型只能安全地表示 "),a("code",[t._v("-9007199254740991 (-(2^53-1)) 和 9007199254740991 ((2^53-1))间的数")]),t._v("，任何超出此范围的整数值都可能失精；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999999999999")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=>10000000000000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并有一定的安全性问题:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740992")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740993")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → true")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-x-3-1、精度解决-bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-3-1、精度解决-bigint"}},[t._v("#")]),t._v(" 1-X-3-1、精度解决—BigInt")]),t._v(" "),a("p",[t._v("BigInt 是一种新的数据类型，用于当整数值大于 Number 数据类型支持的范围时；这种数据类型允许安全地对 "),a("code",[t._v("大整数")]),t._v("  执行算术操作，表示高分辨率的时间戳，使用大整数 id 等等，而不需要使用库；")]),t._v(" "),a("h3",{attrs:{id:"_1-x-3-1-1、创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-3-1-1、创建"}},[t._v("#")]),t._v(" 1-X-3-1-1、创建")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、在数字末尾追加 n 创建 BigInt")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740995n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 9007199254740995n\t")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740995")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 9007199254740996")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、使用 BigInt() 构造函数创建 BigInt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"9007199254740995"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 9007199254740995n")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-x-3-1-2、使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-3-1-2、使用"}},[t._v("#")]),t._v(" 1-X-3-1-2、使用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 30n\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → -10n\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → TypeError: Cannot convert a BigInt value to a number\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → -10n\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 200n\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 2n\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 3n\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 1000n\t")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 11n\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// → 9n")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"bigint"')]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-x-3-1-3、注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-3-1-3、注意事项"}},[t._v("#")]),t._v(" 1-X-3-1-3、注意事项")]),t._v(" "),a("ul",[a("li",[t._v("BigInt 不支持一元加号运算符，可能是某些程序可能依赖于 + 始终生成 Number 的不变量，或抛出异常；另外，更改 + 的行为也会破坏 asm.js 代码；")]),t._v(" "),a("li",[t._v("因隐式类型转换可能丢失信息，故不允许在 bigint 和 Number 间进行混合操作；\n"),a("ul",[a("li",[t._v("当混合使用大整数和浮点数时，结果值可能无法由 BigInt 或 Number 精确表示；")])])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("10 + 10n;    // → TypeError\n")])])]),a("ul",[a("li",[t._v("不能将 BigInt 传递给 Web api 和内置的 JS 函数，这些函数需要一个 Number 类型的数字；尝试这样做会报 TypeError 错误；")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Math.max(2n, 4n, 6n);    // → TypeError\n")])])]),a("ul",[a("li",[t._v("当 Boolean 类型与 BigInt 类型相遇时，BigInt 的处理方式与 Number 类似，即只要不是 0n，BigInt 即会被视为 truthy 值；")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("if(0n){ // 条件判断为false\n}\nif(3n){ // 条件为true\n}\n")])])]),a("ul",[a("li",[t._v("元素均为 BigInt 的数组可进行 sort；")]),t._v(" "),a("li",[t._v("BigInt 可正常地进行位运算，如|、&、<<、>>、^；")])]),t._v(" "),a("h3",{attrs:{id:"_1-x-3-1-4、兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x-3-1-4、兼容性"}},[t._v("#")]),t._v(" 1-X-3-1-4、兼容性")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145910.png",align:""}})])}),[],!1,null,null,null);s.default=e.exports}}]);