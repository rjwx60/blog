(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{402:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"关键词-路线-翻墙文章-how-node-work-internally-书"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键词-路线-翻墙文章-how-node-work-internally-书"}},[t._v("#")]),t._v(" 关键词 & 路线：翻墙文章 How Node work internally + 书")]),t._v(" "),a("p",[t._v("https://medium.com/@sahityakumarsuman/how-nodejs-works-internally-6cf508e61548")]),t._v(" "),a("p",[t._v("[https://stackoverflow.com/questions/9497076/how-node-js-works#:~:text=Node%20JS%20applications%20uses%20single,accommodate%20the%20main%20event%20loop.](https://stackoverflow.com/questions/9497076/how-node-js-works#:~:text=Node JS applications uses single,accommodate the main event loop.)")]),t._v(" "),a("h3",{attrs:{id:"一、基本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、基本"}},[t._v("#")]),t._v(" 一、基本")]),t._v(" "),a("h4",{attrs:{id:"_1-1、诞生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、诞生"}},[t._v("#")]),t._v(" 1-1、诞生")]),t._v(" "),a("p",[t._v("​\t缘由：其他语言存在各种问题，诸如开发门槛高、包含很多阻塞 I/O 库、性能缺陷，而 JS 无后端历史包袱、符合事件驱动、V8高性能、无压导入非阻塞 I/O 库；")]),t._v(" "),a("p",[t._v("​\t诞生：09年3月 RyanDahl，基于 V8 引擎，轻量级 Web 服务器，12年1月转由 Isaac Z. Schlueter 接手；因目的为构建大型网络应用，而每一 Node 进程均参与构成此网络应用的节点，故取名 Node；相比于 Chrome，缺少 Webkit 布局引擎、Html 层、显卡支持等，但支持访问本地文件，基于事件驱动的异步架构；此外还有 node-webkit 项目，其将 Node 与 Webkit 的事件循环相融合，使得既可 UI 构建，又可访问本地资源，实现桌面开发；总结即Node 是 JS 在服务端的运行环境，构建在 chrome 的 V8 引擎之上；")]),t._v(" "),a("h4",{attrs:{id:"_1-2、特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、特点"}},[t._v("#")]),t._v(" 1-2、特点")]),t._v(" "),a("p",[t._v("1.异步非阻塞 IO：底层拥有大量异步 IO(从文件读取到网络请求)，可实现并行 IO 操作，并拥有提升效率方式；")]),t._v(" "),a("p",[t._v("2.事件编程：轻量级、轻耦合，只关注事务，回调通知机制，有回调问题但可通过 Promise 改善，程序无需阻塞等待结果返回，原因同步模式等待的时间则可来处理其它任务；")]),t._v(" "),a("p",[t._v("3.单线程：无状态同步问题，无死锁，无线程上下文交换导致的性能开销，但也无法利用多核、缺乏健壮性、执行时间长也会导致线程阻塞，但可通过 child_process 子进程改善；")]),t._v(" "),a("p",[t._v("4.跨平台：通过 libuv (操作系统与 Node 上层模块间的平台架构层)，兼容统一多平台接口；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("注意：Nginx 也是采用事件驱动机制，其避免多线程的线程创建、线程上下文切换的开销；但 Nginx 采用 C 语言编写，主用于高性能 Web 服务器，不适合业务开发；")])]),t._v(" "),a("li",[a("p",[t._v("注意：虽单线程模型，但却基于事件驱动和异步非阻塞模式，可用于高并发场景，避免线程创建、线程间上下文切换产生资源开销；")])]),t._v(" "),a("li",[a("p",[t._v("注意：实际上，应结合场景，单核 CPU 系统上，可采用单进程 + 单线程 模式开发；多核则可采用多进程 + 单线程模式开发；")]),t._v(" "),a("ul",[a("li",[t._v("补充：进程：系统进行资源分配和调度的基本单位；计算机中程序关于某数据集合上的一次运行活动，线程的容器，是操作系统结构的基础，每当启动一个服务、运行一个实例即开辟一个服务进程；比如 JVM、node app.js；多进程即进程复制，复制出的每个进程均拥有独立空间地址、数据栈等资源；此时 A 进程无法访问 B 进程中定义的变量、数据结构，只有建立 IPC 通信，进程间才可进行数据通信与共享；")]),t._v(" "),a("li",[t._v("补充：线程：操作系统能够进行运算调度的最小单位；隶属于进程，被包含于进程中，一线程只能隶属于一进程，但1进程可拥有多个线程；单线程即一进程只开一线程；")])])]),t._v(" "),a("li",[a("p",[t._v("注意：开启多进程并非解决高并发，而主要解决单进程模式下 CPU 利用率不足情况以充分利用多核性能；")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("使用：通过 child_process.fork 开启多进程 (Node 在 v0.8 版本后新增 Cluster 实现多进程架构)；")])])]),t._v(" "),a("li",[a("p",[t._v("注意：Node 开发过程中，错误会引起整个应用退出，故需考虑应用健壮性(异常抛出、进程守护等)；")])]),t._v(" "),a("li",[a("p",[t._v("注意：单线程无法利用多核 CPU，但后来 Node 提供相应 API 以及三方工具以解决；")])])]),t._v(" "),a("h4",{attrs:{id:"_1-3、场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、场景"}},[t._v("#")]),t._v(" 1-3、场景")]),t._v(" "),a("p",[t._v("IO 密集型：")]),t._v(" "),a("ul",[a("li",[t._v("优势：利用事件驱动，而非启动线程为每一请求服务，资源占用极少；")]),t._v(" "),a("li",[t._v("优势：异步非阻塞IO，极好解决单线程上，CPU 与 IO 间阻塞无法重叠问题，IO 阻塞造成的性能浪费远比 CPU 影响要小；")])]),t._v(" "),a("p",[t._v("CPU 密集型：")]),t._v(" "),a("ul",[a("li",[t._v("劣势：执行时间长的计算，将导致 CPU 时间片不能释放，导致无法发起后续 IO；")]),t._v(" "),a("li",[t._v("解决1：可适当调整/分解大型计算任务为小任务(时间分片??)，使运算及时释放；")]),t._v(" "),a("li",[t._v("解决2：可编写 C/C++ 扩展，以高效地利用 CPU，实现某些 V8 自身难以实现的需求；")]),t._v(" "),a("li",[t._v("解决3：倘若单线程 Node、C/C++ 扩展均无法满足需求，还可将部分 Node 进程当做常驻服务用于计算，然后利用进程间消息传递结果，将计算与IO分离，充分利用多核 CPU；")])]),t._v(" "),a("h4",{attrs:{id:"_1-4、结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4、结构"}},[t._v("#")]),t._v(" 1-4、结构")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Chromium/3.png",align:"center"}}),t._v(" "),a("ul",[a("li",[t._v("V8：谷歌开源项目，目的是在浏览器之外执行 JS 代码；V8 为 Node 提供底层网络访问，并帮助 Node 处理并发性问题等的各个方面；此项目中 70% 的代码是用 C++ 编写，另外 30% 则是用 JS 编写；")]),t._v(" "),a("li",[t._v("libuv：libuv 是位于 libeio、 libev、 c-ares (用于DNS)和 iocp (用于 windows asynchronous-io)顶部的抽象层；libuv 执行、维护和管理事件池中的所有 I/O操作和事件；(如果是 libeio 线程池)；它允许 JS 代码执行 I/O 操作(无论是网络操作还是文件操作等)；该库执行所有 TCP 级别的连接和文件/系统操作；此库完全由 C++ 编写；")]),t._v(" "),a("li",[t._v("注意：NodeJs 只是作为编写的 JS 代码，与其他用 JS 或 C++ 编写的代码 (***"),a("u",[t._v("V8和 libuv")]),t._v("***)间的接口；这使得 JS 开发者不必直接与 C++ 代码交互，并将应用程序的 JS 部分同运行在计算机中的实际 C++ 代码相关联起来，以编译和执行 JS 代码；此外 NodeJS 还提供了系列包装器和统一的 API，以供在项目中使用，比如库模块，如 http，fs，crypto，path 等非常一致的 API，用户不能直接访问 C++ 编写的代码，而只需使用 JS 函数，函数最终调用 node.js libuv 项目；")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Chromium/4.png",align:"center"}}),t._v(" "),a("p",[t._v("。")]),t._v(" "),a("h3",{attrs:{id:"二、运作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、运作机制"}},[t._v("#")]),t._v(" 二、运作机制")]),t._v(" "),a("h3",{attrs:{id:"三、模块机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、模块机制"}},[t._v("#")]),t._v(" 三、模块机制")]),t._v(" "),a("h4",{attrs:{id:"_3-1、基本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、基本"}},[t._v("#")]),t._v(" 3-1、基本：")]),t._v(" "),a("p",[t._v("Node 借鉴 CommonJS 的 Modules 规范实现自身模块系统；")]),t._v(" "),a("h4",{attrs:{id:"_3-2、分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、分类"}},[t._v("#")]),t._v(" 3-2、分类")]),t._v(" "),a("p",[t._v("3-2-1、核心模块：")]),t._v(" "),a("ul",[a("li",[t._v("描述：由 Node 自身提供，其在源码编译时即被编译进二进制执行文件，当进程启动时便被直接加载进内存；")]),t._v(" "),a("li",[t._v("注意：因上述原因，此类模块的引入/文件定位/编译执行步骤均可忽略，而在路径分析中，其优先级更高，加载速度也更快；")])]),t._v(" "),a("p",[t._v("3-2-2、文件模块：用户提供的，运行时加载的，速度比核心慢，需经过3阶段：路径分析、文件定位、编译执行；")]),t._v(" "),a("p",[t._v("3-2-3、模块异同：")]),t._v(" "),a("ul",[a("li",[t._v("相同：引入的模块均会进行缓存(缓存内容：编译 & 执行后的对象)，以减少二次引入时的开销；")]),t._v(" "),a("li",[t._v("不同：\n"),a("ul",[a("li",[t._v("缓存检查优先度中，核心模块依然优先于文件模块；")]),t._v(" "),a("li",[t._v("文件模块无须将源代码编译进 Node，而是通过 "),a("code",[t._v("dlopen")]),t._v(" 方法动态加载；")]),t._v(" "),a("li",[t._v("文件模块在编写时无须将源代码写入 Node 命名空间，也无需提供头文件；")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-3、路径分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、路径分析"}},[t._v("#")]),t._v(" 3-3、路径分析")]),t._v(" "),a("p",[t._v("3-3-1、描述")]),t._v(" "),a("p",[t._v("模块标识符分析(require() 中的标识符参数分析)，基于此标识符进行模块查找；等同npm包路径分析；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("核心模块：http、fs、path 等；")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("首先，路径优先级最高，其次是缓存；")]),t._v(" "),a("li",[t._v("其次，无需定位、无需编译，直接使用；")])])]),t._v(" "),a("li",[a("p",[t._v("文件模块：以点开始的相对路径文件模块 & 以斜杠开始的绝对路径文件模块；")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("首先，"),a("code",[t._v("require")]),t._v(" 会将其转为真实路径，并以此作为索引；")]),t._v(" "),a("li",[t._v("然后，根据模块路径查找策略定位文件，并进行编译；")]),t._v(" "),a("li",[t._v("随后，将编译后的执行结果存放在缓存，以便二次加载更快；")])])]),t._v(" "),a("li",[a("p",[t._v("自定模块：非路径形式的文件模块，形式为文件/包，比如自定义 connect 模块；")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("首先，根据模块路径查找策略定位文件；")]),t._v(" "),a("li",[t._v("注意：自定义模块均在文件最外层，故加载速度最慢 (除非写在当前文件的 "),a("code",[t._v("node_modules")]),t._v(" 中..)；")])])])]),t._v(" "),a("p",[t._v("3-3-2、路径形式")]),t._v(" "),a("p",[t._v("模块路径具体表现为由路径组成的数组；")]),t._v(" "),a("ul",[a("li",[t._v("生成方式：创建任意 JS 文件，内容为 "),a("code",[t._v("console.log(module.paths)")]),t._v("，然后 "),a("code",[t._v("node 目标文件.js")]),t._v(" 即可输出；")])]),t._v(" "),a("p",[t._v("3-3-3、模块查找策略")]),t._v(" "),a("p",[t._v("加载过程中，Node 会逐个尝试模块路径中的路径，直到找到目标文件为止，路径越深，模块查找耗时越多；")]),t._v(" "),a("ul",[a("li",[t._v("搜寻当前文件目录下的 "),a("code",[t._v("node_modules")]),t._v(" 目录；")]),t._v(" "),a("li",[t._v("搜寻父级文件目录下的 "),a("code",[t._v("node_modules")]),t._v(" 目录；")]),t._v(" "),a("li",[t._v("搜寻爷级文件目录下的 "),a("code",[t._v("node_modules")]),t._v(" 目录；")]),t._v(" "),a("li",[t._v("沿路径向上逐级递归，直至根目录下的 "),a("code",[t._v("node_modules")]),t._v(" 目录；")])]),t._v(" "),a("h4",{attrs:{id:"_3-4、文件定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、文件定位"}},[t._v("#")]),t._v(" 3-4、文件定位")]),t._v(" "),a("p",[t._v("文件扩展名分析：")]),t._v(" "),a("p",[t._v("若不包含扩展名，则调用 fs 模块同步阻塞式判断文件是否存在，并按 "),a("code",[t._v(".js > .json > .node")]),t._v(" 顺序补足扩展名；")]),t._v(" "),a("ul",[a("li",[t._v("注意：对 node、json 文件，可在使用 require 时，顺带添加扩展名，以稍微提高速度；")]),t._v(" "),a("li",[t._v("注意：因缓存优化策略，二次引入时无需路径分析、文件定位、编译执行等过程；")])]),t._v(" "),a("p",[t._v("3-4-2、目录与包分析：")]),t._v(" "),a("p",[t._v("若通过文件扩展名分析后，仍无法找到对应文件(或得到一个目录<常见于自定义模块，逐个模块路径查找时>)，此时 Node 会将目录当作包来处理；")]),t._v(" "),a("ul",[a("li",[t._v("首先，在所在目录查找 "),a("code",[t._v("package.json")]),t._v("：\n"),a("ul",[a("li",[t._v("若有，则通过 "),a("code",[t._v("JSON.parse")]),t._v(" 解析出包描述对象，并取出 main 属性指定的文件名进行定位；\n"),a("ul",[a("li",[t._v("若缺少文件名扩展名，则进入文件扩展名分析流程；")]),t._v(" "),a("li",[t._v("若文件名错误，则将 index 作为默认文件名，依次查找 "),a("code",[t._v("index.js index.json index.node；")])])])]),t._v(" "),a("li",[t._v("若无，则将 index 作为默认文件名，依次查找 "),a("code",[t._v("index.js index.json index.node；")])])])]),t._v(" "),a("li",[t._v("最后，若还是没有成功定位任何文件，则继续查找下一个模块路径，直至路径数组遍历完毕，若依然没有找到，则向上抛出查找失败错误；")]),t._v(" "),a("li",[t._v("示例：\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Chromium/1.png",align:"left"}})])])])]),t._v(" "),a("h4",{attrs:{id:"_3-5、模块编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5、模块编译"}},[t._v("#")]),t._v(" 3-5、模块编译")]),t._v(" "),a("p",[t._v("编译后进行加载并导出，此节亦是 CommonJS 模块规范的 Node 实现")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原理：编译过程中，Node 对获取到的 JS 文件，进行头尾包装，以实现每个模块文件的作用域隔离：")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("头部增加："),a("code",[t._v("(function(*exports*, *require*, *module*, *__filename*, *__dirname*){ \\n；")])]),t._v(" "),a("li",[t._v("尾部增加："),a("code",[t._v("\\n })")])])])]),t._v(" "),a("li",[a("p",[t._v("然后，通过执行 vm 原生模块的 "),a("code",[t._v("runInThisContext")]),t._v(" ，返回一个具体的 function 对象，并将当前模块的 exports、require、module(模块自身)、查找到的文件路径、文件目录作为参数传递此 function 执行；")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("这也是为何："),a("code",[t._v("require、exports、module")]),t._v(" 变量没有在模块中定义，却可在每个模块中存在的原因；")])])]),t._v(" "),a("li",[a("p",[t._v("最后，对象执行后，将模块的 "),a("code",[t._v("exports")]),t._v(" 属性返回给调用方，此后属性上的方法 & 属性，均可被外部调用，但其余变量则不可直接调用；")])]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Chromium/2.png",align:"left"}})])]),t._v(" "),a("p",[t._v("3-5-1、文件模块编译")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("普通文件模块：")])]),t._v(" "),a("li",[a("ul",[a("li",[a("p",[t._v("首先，定位到具体文件后，新建模块对象；")])]),t._v(" "),a("li",[a("p",[t._v("然后，按照路径 & 文件扩展名载入并进行相应编译 (具体编译实现看核心模块的JS模块编译)：")])]),t._v(" "),a("li",[a("ul",[a("li",[a("code",[t._v(".js")]),t._v("：用 fs 模块同步读取，随后编译执行；")]),t._v(" "),a("li",[a("code",[t._v(".json")]),t._v(" ：用 fs 模块同步读取并用 "),a("code",[t._v("JSON.parse")]),t._v(" 解析，将结果赋给模块对象的 "),a("code",[t._v("exports")]),t._v(" 供外部调用；")]),t._v(" "),a("li",[a("code",[t._v(".node")]),t._v(" ：使用 dlopen 方法加载最后编译生成的文件；")]),t._v(" "),a("li",[a("code",[t._v(".else")]),t._v("  ：处理同 "),a("code",[t._v(".js")]),t._v(" 文件；")])])]),t._v(" "),a("li",[a("p",[t._v("最后，编译成功的模块，将其文件路径作为索引，在 "),a("code",[t._v("Module._cache")]),t._v(" 对象上缓存以提高二次导入性能；")])])])]),t._v(" "),a("li",[a("p",[t._v("特殊文件模块：C/C++ 模块")]),t._v(" "),a("ul",[a("li",[t._v("描述：即上述提到的 node 文件，用于提升性能与执行效率；")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("注意：使用 "),a("code",[t._v("dlopen")]),t._v(" 方法动态加载最后编译生成的文件；")]),t._v(" "),a("li",[t._v("注意："),a("code",[t._v("dlopen")]),t._v(" 的实现因平台而不同，但均通过 libux 兼容层封装统一；")]),t._v(" "),a("li",[t._v("注意：实际上，node 文件是用 C/C++ 编写的扩展文件，经编译后生产，故无需编译，只需加载 & 执行；")]),t._v(" "),a("li",[t._v("注意：执行时，模块的 exports 与 .node 模块相关联，然后返回给调用者；")])])]),t._v(" "),a("li",[a("p",[t._v("特殊文件模块：C/C++扩展模块")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("编写：与核心模块相比，无需编写如 node 命名空间，即 "),a("code",[t._v("namespace node { ..")])]),t._v(" "),a("li",[t._v("加载：仅通过 "),a("code",[t._v("process.dlopeen")]),t._v(" 动态加载；")]),t._v(" "),a("li",[t._v("导出：详看 31-33；")])])])]),t._v(" "),a("p",[t._v("3-5-2、核心模块编译")]),t._v(" "),a("p",[t._v("核心模块实际可分成 C/C++ 编写部分和 JS 编写两部分：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("核心模块 JS 编写部分：")])]),t._v(" "),a("li",[a("ul",[a("li",[a("p",[t._v("存储：在 lib 目录；")])]),t._v(" "),a("li",[a("p",[t._v("转换：使用 V8 的 "),a("code",[t._v("js2c.py")]),t._v(" 工具，将 JS 代码 ("),a("code",[t._v("src/node.js & lib/*.js")]),t._v(") 转换成 C++ 数组，生成 "),a("code",[t._v("node_natives.h")]),t._v(" 文件，并存储在 "),a("code",[t._v("NativeModule._source")]),t._v(" 中；")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("首先，通过 "),a("code",[t._v("process.binding(‘natives’)")]),t._v(" 取出上述通过 "),a("code",[t._v("js2c.py")]),t._v(" 转换的字符串数组，并将其重新转为普通字符串；")]),t._v(" "),a("li",[t._v("然后，进行头尾包装以导出 "),a("code",[t._v("export")]),t._v(" 对象；")]),t._v(" "),a("li",[t._v("最后，编译成功的模块，将其文件路径作为索引，缓存在 "),a("code",[t._v("NativeModule._cache")]),t._v(" 对象上；")]),t._v(" "),a("li",[t._v("注意：转换 JS 码时，JS 代码以字符串形式，存储在 node 命名空间中，不可直接执行；")]),t._v(" "),a("li",[t._v("注意：核心模块需编译，而文件模块还需进行路径分析、文件定位；")]),t._v(" "),a("li",[t._v("注意：文件模块缓存中在 "),a("code",[t._v("Module._cache")]),t._v(" 对象中；")]),t._v(" "),a("li",[t._v("注意：当 Node 进程启动时，JS 代码将直接加载进内存JS 核心模块经标识符分析后直接定位到内存；")])])])])]),t._v(" "),a("li",[a("p",[t._v("核心模块 C/C++ 编写部分：")])]),t._v(" "),a("li",[a("ul",[a("li",[a("p",[t._v("存储：在 src 目录；")])]),t._v(" "),a("li",[a("p",[t._v("转换：因原本即用 C/C++ 编写，随后又被编译成二进制文件，故无需再转换；")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("注意：当 Node 进程启动时，便被直接加载进内存，无需定位、分析、编译等步骤，直接可执行；")]),t._v(" "),a("li",[t._v("协助加载：在 Node 启动过程中，还会生成全局变量 "),a("code",[t._v("process")]),t._v("，其提供 "),a("code",[t._v("Binding")]),t._v(" 方法协助加载；")]),t._v(" "),a("li",[t._v("真正加载：此时，会先构建 "),a("code",[t._v("exports")]),t._v(" 对象，调用 "),a("code",[t._v("get_builtin_module")]),t._v(" 方法取出模块，执行 "),a("code",[t._v("register_func")]),t._v(" 填充 "),a("code",[t._v("exports")]),t._v(" 对象，最后 "),a("code",[t._v("exports")]),t._v(" 对象按模块名缓存，并返回给调用方完成导出；")])])])])])]),t._v(" "),a("h3",{attrs:{id:"四、异步机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、异步机制"}},[t._v("#")]),t._v(" 四、异步机制")]),t._v(" "),a("p",[t._v("Node 中阻塞IO与异步IO的实现：")]),t._v(" "),a("ul",[a("li",[t._v("阻塞和非阻塞 I/O 其实是针对操作系统内核而言：\n"),a("ul",[a("li",[t._v("阻塞 I/O："),a("strong",[a("u",[t._v("一定要等到操作系统完成所有操作后才表示调用结束")])]),t._v("；")]),t._v(" "),a("li",[t._v("非阻塞 I/O："),a("strong",[a("u",[t._v("调用后立马返回不等操作系统内核完成操作")])]),t._v("；")])])]),t._v(" "),a("li",[t._v("Node 的异步 I/O 采用多线程的方式，由 "),a("code",[t._v("EventLoop")]),t._v("、"),a("code",[t._v("I/O 观察者")]),t._v("，"),a("code",[t._v("请求对象")]),t._v("、"),a("code",[t._v("线程池")]),t._v("四大要素相互配合，共同实现；")])]),t._v(" "),a("h4",{attrs:{id:"_4-1、i-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、i-o"}},[t._v("#")]),t._v(" 4-1、I/O")]),t._v(" "),a("p",[a("strong",[a("u",[t._v("I/O 即 Input/Output")])]),t._v("；在浏览器端，只有一种 I/O(网络I/O)，即利用 Ajax 发送网络请求，然后读取返回的内容；而 Node 则有相对广泛的 I/O 的场景：")]),t._v(" "),a("ul",[a("li",[a("strong",[a("u",[t._v("文件 I/O")])]),t._v("：比如用 fs 模块对文件进行读写操作；")]),t._v(" "),a("li",[a("strong",[a("u",[t._v("网络 I/O")])]),t._v("：比如用 http 模块发起网络请求；")])]),t._v(" "),a("h4",{attrs:{id:"_4-2、阻塞和非阻塞i-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、阻塞和非阻塞i-o"}},[t._v("#")]),t._v(" 4-2、阻塞和非阻塞I/O")]),t._v(" "),a("p",[t._v("阻塞和非阻塞 I/O 其实是针对操作系统内核而言：")]),t._v(" "),a("ul",[a("li",[t._v("阻塞 I/O："),a("strong",[a("u",[t._v("一定要等到操作系统完成所有操作后才表示调用结束")])]),t._v("；")]),t._v(" "),a("li",[t._v("非阻塞 I/O："),a("strong",[a("u",[t._v("调用后立马返回不等操作系统内核完成操作")])]),t._v("；")])]),t._v(" "),a("p",[t._v("使用前者，在操作系统进行 I/O 操作过程中，应用程序实际一直处于等待状态；")]),t._v(" "),a("p",[t._v("使用后者，调用返回后 Node 应用程序可完成其他事情，而系统同时也在进行 I/O，充分利用等待时间，提高执行效率，但应用无法得知系统已完成 I/O 操作；")]),t._v(" "),a("p",[t._v("为让 Node 获悉操作系统已做完 I/O 操作，需要重复地去操作系统那里判断是否完成，这种重复判断的方式就是 "),a("strong",[a("u",[t._v("轮询")])]),t._v("，方案如下：")]),t._v(" "),a("ul",[a("li",[t._v("一直轮询检查I/O状态，直到 I/O 完成；"),a("strong",[a("u",[t._v("最原始的方式性能也最低")])]),t._v("，会让 CPU 一直耗用在等待上，效果等同于阻塞 I/O；")]),t._v(" "),a("li",[t._v("遍历 "),a("u",[t._v("文件描述符")]),t._v(" 来确定 I/O 是否完成，I/O 完成则 "),a("u",[t._v("文件描述符")]),t._v(" 的状态改变，缺点是 CPU 轮询消耗还是很大；\n"),a("ul",[a("li",[t._v("补充：文件描述符： 即 文件I/O 时操作系统与 Node 间的文件凭证；")])])]),t._v(" "),a("li",[t._v("epoll模式：即进入轮询时，若 I/O 未完成CPU就休眠，完成后再唤醒 CPU；")])]),t._v(" "),a("p",[a("strong",[a("u",[t._v("现实是：CPU要么重复检查I/O，要么重复检查文件描述符，要么休眠，均无高效利用；理想是：Node 应用发起 I/O 调用后，可直接去执行别的逻辑，操作系统默默地做完 I/O 后，给 Node 发送完成信号，Node 执行回调操作")])]),t._v("；")]),t._v(" "),a("h4",{attrs:{id:"_4-3、异步-i-o-本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3、异步-i-o-本质"}},[t._v("#")]),t._v(" 4-3、异步 I/O 本质")]),t._v(" "),a("p",[t._v("上述理想般的实现，其实在 Linux 已原生实现—AIO，但两个致命缺陷:")]),t._v(" "),a("ul",[a("li",[t._v("只有 Linux 下存在，其他系统中没有异步 I/O 支持；")]),t._v(" "),a("li",[t._v("无法利用系统缓存；")])]),t._v(" "),a("h4",{attrs:{id:"_4-4、node-异步-i-o-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4、node-异步-i-o-实现"}},[t._v("#")]),t._v(" 4-4、Node 异步 I/O 实现")]),t._v(" "),a("p",[a("strong",[a("u",[t._v("上述情况单线程无解，但多线程可实现；所以可以让一个进程进行计算操作，另外一些进行 I/O 调用，当 I/O 完成后将信号传给计算的线程，进而执行回调；所以，异步 I/O 就是使用这样的线程池来实现；")])])]),t._v(" "),a("h5",{attrs:{id:"_4-4-1、系统支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1、系统支持"}},[t._v("#")]),t._v(" 4-4-1、系统支持")]),t._v(" "),a("p",[t._v("只是在不同的系统下面表现会有所差异：")]),t._v(" "),a("ul",[a("li",[t._v("在 Linux 下可直接使用线程池来完成；")]),t._v(" "),a("li",[t._v("在 Window 下则采用 IOCP 这个系统 API (内部还是用线程池完成)；")])]),t._v(" "),a("p",[t._v("有了操作系统的支持，那 nodejs 如何来对接这些操作系统从而实现异步 I/O 呢？")]),t._v(" "),a("h5",{attrs:{id:"_4-4-2、libuv-兼容统一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2、libuv-兼容统一"}},[t._v("#")]),t._v(" 4-4-2、libuv 兼容统一")]),t._v(" "),a("p",[t._v("以文件 I/O 为例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Node 执行代码的大致过程：")])]),t._v(" "),a("ul",[a("li",[t._v("首先，fs.readFile 调用 Node 核心模块 fs.js ；")]),t._v(" "),a("li",[t._v("然后，Node "),a("u",[t._v("核心模块调用内建模块")]),t._v(" node_file.cc，创建对应的文件 "),a("strong",[a("u",[t._v("I/O观察者对象")])])]),t._v(" "),a("li",[t._v("最后，根据不同平台，"),a("u",[t._v("内建模块")]),t._v(" 通过 "),a("strong",[a("u",[t._v("libuv 中间层")])]),t._v(" 进行系统调用(此处是利用 uv_fs_open()  实现)；")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Chromium/30.png"}}),t._v(" "),a("p",[a("strong",[t._v("libuv 的 uv_fs_open 进行系统调用的大致过程：")])]),t._v(" "),a("ul",[a("li",[t._v("首先，创建请求对象")])]),t._v(" "),a("p",[t._v("以 Windows 为例，在函数 uv_fs_open 的调用过程中，创建了一个 "),a("u",[t._v("文件I/O的")]),t._v(" "),a("strong",[a("u",[t._v("请求对象")])]),t._v("，并往里面注入了回调函数。")]),t._v(" "),a("div",{staticClass:"language-c++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("req_wrap->object_->Set(oncomplete_sym, callback);\n// req_wrap 即请求对象，req_wrap 中 object_ 的 oncomplete_sym 属性对应的值便是 Node 应用代码中传入的回调函数\n")])])]),a("ul",[a("li",[t._v("然后，推入线程池，调用返回")])]),t._v(" "),a("p",[t._v("上述请求对象包装完成后，"),a("code",[t._v("QueueUserWorkItem()")]),t._v(" 方法将此对象推进线程池中等待执行；")]),t._v(" "),a("p",[a("strong",[t._v("至此，现在 JS 的调用即直接返回，"),a("u",[t._v("JS 应用代码")]),t._v("可 "),a("u",[t._v("继续往下执行")]),t._v("；同时当前 "),a("u",[t._v("I/O 操作")]),t._v(" "),a("u",[t._v("也在线程池中将被执行")]),t._v("；异步目的实现；")])]),t._v(" "),a("ul",[a("li",[t._v("最后，回调通知\n"),a("ul",[a("li",[t._v("首先，当对应线程中的 I/O 完成后，会将获得的结果 "),a("u",[t._v("存储")]),t._v(" 起来，保存到  "),a("u",[a("strong",[t._v("相应的请求对象")])]),t._v(" 中；")]),t._v(" "),a("li",[t._v("然后调用 "),a("code",[t._v("PostQueuedCompletionStatus()")]),t._v(" 向 "),a("u",[t._v("IOCP")]),t._v(" 提交执行完成的状态，并将线程归还给系统；")]),t._v(" "),a("li",[t._v("随后，一旦 Node EvLoop 在轮询操作中，调用 "),a("code",[t._v("GetQueuedCompletionStatus")]),t._v(" 时检测到了完成状态，就会将 "),a("u",[a("strong",[t._v("请求对象")])]),t._v(" 塞给上述提及的 "),a("u",[a("strong",[t._v("I/O观察者对象")])]),t._v("；")]),t._v(" "),a("li",[t._v("最后，"),a("strong",[a("u",[t._v("I/O 观察者对象")])]),t._v(" 取出 "),a("strong",[a("u",[t._v("请求对象")])]),t._v(" 的 "),a("u",[t._v("存储结果")]),t._v("，同时也取出它的 "),a("code",[t._v("oncomplete_sym")]),t._v(" 属性，即回调函数，将前者(存储结果)作为函数参数传入后者(回调)，并执行后者，即执行回调函数；")]),t._v(" "),a("li",[t._v("补充： "),a("code",[t._v("GetQueuedCompletionStatus")]),t._v(" 和 "),a("code",[t._v("PostQueuedCompletionStatus")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("GetQueuedCompletionStatus")]),t._v("：在 NodeEvLoop 的描述中("),a("u",[t._v("详看V8—EvLoop—NodeEvLoop小节")]),t._v(")，每一个 Tick 当中均会调用 "),a("code",[t._v("GetQueuedCompletionStatus")]),t._v("，以检查线程池中是否有执行完的请求，若有则表示时机已成熟，可执行回调；")]),t._v(" "),a("li",[a("code",[t._v("PostQueuedCompletionStatus")]),t._v("：负责向 IOCP 提交状态，告知当前 I/O 已完成；")])])])])])]),t._v(" "),a("h5",{attrs:{id:"_4-4-3、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-3、总结"}},[t._v("#")]),t._v(" 4-4-3、总结")]),t._v(" "),a("p",[t._v("Node 中阻塞IO与异步IO的实现：")]),t._v(" "),a("ul",[a("li",[t._v("阻塞和非阻塞 I/O 其实是针对操作系统内核而言：\n"),a("ul",[a("li",[t._v("阻塞 I/O："),a("strong",[a("u",[t._v("一定要等到操作系统完成所有操作后才表示调用结束")])]),t._v("；")]),t._v(" "),a("li",[t._v("非阻塞 I/O："),a("strong",[a("u",[t._v("调用后立马返回不等操作系统内核完成操作")])]),t._v("；")])])]),t._v(" "),a("li",[t._v("Node 的异步 I/O 采用多线程的方式，由 "),a("code",[t._v("EventLoop")]),t._v("、"),a("code",[t._v("I/O 观察者")]),t._v("，"),a("code",[t._v("请求对象")]),t._v("、"),a("code",[t._v("线程池")]),t._v("四大要素相互配合，共同实现；")])]),t._v(" "),a("h3",{attrs:{id:"五、内存管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、内存管理"}},[t._v("#")]),t._v(" 五、内存管理")]),t._v(" "),a("h3",{attrs:{id:"六、事件机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六、事件机制"}},[t._v("#")]),t._v(" 六、事件机制")]),t._v(" "),a("h4",{attrs:{id:"_6-1、node-内部回调机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、node-内部回调机制"}},[t._v("#")]),t._v(" 6-1、node 内部回调机制")]),t._v(" "),a("p",[t._v("回调内部利用了"),a("code",[t._v("发布-订阅")]),t._v("模式，下面模拟实现 Node 中的 Event 模块为例来写实现回调函数的机制，详看： "),a("a",{attrs:{href:"https://github.com/Gozala/events/blob/master/events.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("Event 模块"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原理: ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 Map 管理存放的回调，addListener 为存入，emit 为调用，removeListener 为取出，once 为根据标记选择性调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("EventEmitter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// once 参数表示是否只是触发一次")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("wrapCallback")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" once "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" once "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("addListener")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" once "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为 type 事件绑定回调")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" once"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目前 type 事件只有一个回调")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" once"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目前 type 事件回调数 >= 2")]),t._v("\n    handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" once"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("removeListener")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" listener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除该回调，注意数组塌陷的问题，即后面的元素会往前挪一位。i 要 -- ")]),t._v("\n      handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 长度为 1 就不用数组存了")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("removeAllListener")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("emit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历列表，执行回调")]),t._v("\n    handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记的 once: true 的项直接移除")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("once"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有一个回调则直接执行")]),t._v("\n    handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("once")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type事件触发！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WOW!type事件又触发了！"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type事件我只触发一次"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("once")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeAllListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type事件触发！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WOW!type事件又触发了！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type事件我只触发一次")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type事件触发！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WOW!type事件又触发了！")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缺点:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、在参数少的情况下，call 的性能优于 apply，反之 apply 的性能更好。因此在执行回调时候可以根据情况调用 call 或者 apply。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、考虑到内存容量，应该设置回调列表的最大值，当超过最大值的时候，应该选择部分回调进行删除操作。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、鲁棒性有待提高。对于参数的校验很多地方直接忽略掉了。")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);