(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{612:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"二、模块构建工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、模块构建工具"}},[t._v("#")]),t._v(" 二、模块构建工具")]),t._v(" "),a("p",[t._v("模块化规范：规范如何组织代码，提高代码可读性，用以针对开发者；")]),t._v(" "),a("p",[t._v("包管理工具：用以管理包的安装、卸载、更新、查看、搜索、发布等；")]),t._v(" "),a("p",[t._v("模块化构建工具：用以组织前端模块逻辑的构建工具、现已不局限于模块化，还有很多便利的工具，如压缩、代码检查等；")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("包管理工具")])]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("模块化构建工具")])]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[a("strong",[t._v("模块化规范")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("npm")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("webpack")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("es6Module")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("bower")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("requireJs、seaJs、browserify")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("AMD、CMD、UMD、CommonJS")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-1、模块构建工具演变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、模块构建工具演变"}},[t._v("#")]),t._v(" 2-1、模块构建工具演变")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200918181214.png",align:""}}),t._v(" "),a("ul",[a("li",[t._v("黑暗时代、构建、通过在线工具压缩和混淆(避免代码逻辑暴露)、08年出现 YUI(可本地进行JSCSS压缩)")]),t._v(" "),a("li",[t._v("模块化推进、并催生各种规范；")]),t._v(" "),a("li",[t._v("Grunt：Task Runner，将构建过程分为多个独立任务、任务处理完成后将结果存放到本地磁盘中，导致打包速度慢(涉及磁盘IO操作)")]),t._v(" "),a("li",[t._v("Gulp、FIS3：改进前者；引入文件流概念，将处理结果存放内存中，下一任务可直接利用前一步处理结果，加速打包速度；\n"),a("ul",[a("li",[t._v("注意 FIS3 已不再维护；")])])]),t._v(" "),a("li",[t._v("Webpack：社区活跃、官方更迭速度快、配置灵活插件化扩展；\n"),a("ul",[a("li",[t._v("Rollup：主要引入了 tree-shaking 概念；")])])])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://i.loli.net/2020/09/07/qRzjDmH9w5Vl2bK.png",align:""}}),t._v(" "),a("h2",{attrs:{id:"_2-2、模块工具简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、模块工具简介"}},[t._v("#")]),t._v(" 2-2、模块工具简介")]),t._v(" "),a("h3",{attrs:{id:"_2-2-1、browserify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1、browserify"}},[t._v("#")]),t._v(" 2-2-1、Browserify")]),t._v(" "),a("p",[t._v("Commonjs In Browser - 2011 - 2014 - 模块打包器")]),t._v(" "),a("p",[t._v("原理：其找出入口文件，解析 require-调用为 AST，以遍历项目的整个依赖关系，并将其所有依赖项都包含在出口文件中；")]),t._v(" "),a("p",[t._v("使用："),a("code",[t._v("browserify main.js -o bundle.js")])]),t._v(" "),a("ul",[a("li",[t._v("注意：browserify 是 模块打包器，browserify 是在浏览器中利用 CommonJS 的思想实现；")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-2、webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2、webpack"}},[t._v("#")]),t._v(" 2-2-2、Webpack")]),t._v(" "),a("p",[t._v("Module Bundler - 2014 - 模块打包器")]),t._v(" "),a("p",[t._v("基本：Webpack 始于 2012 年，由 Tobias Koppers 发起，⽤于解决当时前端开发的⼀个难题：构建复杂的单⻚ 应⽤程序(SPA)；Webpack 将⼀切都作为模块，然后通过不同加载器 loader 来加载这些模块；若想按需加载，则其还提供了代码拆分 (Code Splitting)")]),t._v(" "),a("p",[t._v("介绍：可处理 CommonJS 、 AMD 和 ES6 模块，并具有多种功能：")]),t._v(" "),a("ul",[a("li",[t._v("loader：加载器，可加载任何文件到源文件中；用 require() 语法，可加载 Js、CSS、CoffeeScript、Sass、Less、HTML模板、图像等；")]),t._v(" "),a("li",[t._v("plugin：可在打包写入到打包文件之前对其进行操作；比如，给打包代码添加注释，添加 Source map，将打包文件分离成块等等；")]),t._v(" "),a("li",[t._v("tree-shaking：webpack2 引入： "),a("a",{attrs:{href:"https://www.html.cn/archives/6946",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack 2 中的 Tree Shaking"),a("OutboundLink")],1),t._v("，更多 tree-shaking 内容请看 rollup 小节")]),t._v(" "),a("li",[t._v("dev-server：热更新开发；")]),t._v(" "),a("li",[t._v("code-splitting：代码拆分；")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-2-1、version-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-1、version-diff"}},[t._v("#")]),t._v(" 2-2-2-1、Version diff")]),t._v(" "),a("p",[t._v("不管哪个版本，"),a("strong",[a("u",[a("em",[t._v("均能节省前端程序员时间")])])]),t._v("：")]),t._v(" "),a("p",[t._v("Webpack 1 发布：")]),t._v(" "),a("ul",[a("li",[t._v("模块加载、代码拆分；")])]),t._v(" "),a("p",[t._v("Webpack 2 发布：")]),t._v(" "),a("ul",[a("li",[t._v("增加 tree-shaking (借鉴 Rollup)；")])]),t._v(" "),a("p",[t._v("Webpack 3 发布：")]),t._v(" "),a("ul",[a("li",[t._v("增加 Scope Hoisting (借鉴 Rollup)；")])]),t._v(" "),a("p",[t._v("Webpack 4 发布：")]),t._v(" "),a("ul",[a("li",[t._v("免配置；\n"),a("ul",[a("li",[t._v("⽐如默认 entry 为 ./src，默认 output  为 ./dist，即项目初始时不用配置 webpack.config (借鉴 Parcel)")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"25%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200918181215.png",align:""}})])])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/32691352",target:"_blank",rel:"noopener noreferrer"}},[t._v("支持 JSON 的 tree-shaking"),a("OutboundLink")],1),t._v("；")]),t._v(" "),a("li",[t._v("支持 .mjs (EcmaScript module)；")]),t._v(" "),a("li",[t._v("支持 WebAssembly，默认会寻找 .wasm , .mjs , .js 和 .json 扩展名的⽂件进⾏加载和打包；")]),t._v(" "),a("li",[t._v("优化提升，删除了 CommonsChunkPlugin，增加了 optimization.splitChunks 和 optimization.runtimeChunk；\n"),a("ul",[a("li",[t._v("CommonsChunkPlugin 存在 hash 问题，使用复杂，虽改造后仍复杂；")])])]),t._v(" "),a("li",[t._v("代码层面的最大变化：整个 Plugin 的事件注册与触发机制被重写，所有三方插件都要修改才能使用：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Webpack3 注册 与 触发")]),t._v("\ncompiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘done’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncompilitation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyPlugins")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘done’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Webpack4 注册 与 触发")]),t._v("\ncompiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘mypluinname’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncompiler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("done")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-2-3、systemjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3、systemjs"}},[t._v("#")]),t._v(" 2-2-3、SystemJS")]),t._v(" "),a("p",[t._v("通用模块加载器，能在浏览器 / Node 上动态加载模块、支持 CommonJS、AMD、全局模块对象和 ES6 模块；通过插件，可加载 Js、CoffeeScript、TypeScript；")]),t._v(" "),a("p",[t._v("优点：建立在 ES6 模块加载器之上，其语法 & API 在将来很可能是语言的一部分；")]),t._v(" "),a("h3",{attrs:{id:"_2-2-x、rollup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-x、rollup"}},[t._v("#")]),t._v(" 2-2-X、Rollup")]),t._v(" "),a("p",[t._v("普及 JS 圈内一重要特性：Tree shaking，即消除 JS 上下文中无用代码，只保留有用的代码；")]),t._v(" "),a("p",[t._v("原理：依赖于 ES6 模块 import / export 模块系统的静态结构(static structure) 来检测哪一模块没有被使用；")]),t._v(" "),a("h3",{attrs:{id:"_2-2-x-1、tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-x-1、tree-shaking"}},[t._v("#")]),t._v(" 2-2-X-1、Tree-shaking")]),t._v(" "),a("p",[a("u",[t._v("注意：讨论的此版本为 2018年1月的 webpack 版本的 TreeShaking，webpack4 已无下述问题；")])]),t._v(" "),a("p",[t._v("背景："),a("strong",[a("u",[a("em",[t._v("Tree-shaking")])])]),t._v(" 最早由 Rich Harris 的 rollup 实现，后来支持此功能的还有 webpack2、"),a("strong",[a("u",[a("em",[t._v("Closure compiler")])])])]),t._v(" "),a("p",[t._v("定义：通过工具去除 JS  文件中没有使用到的代码或模块，以删除无用代码，实现性能优化；")]),t._v(" "),a("p",[t._v("意义：Tree-shaking 对 web 意义重大，是一极致优化的理想世界，是前端进化的又一个终极理想；")]),t._v(" "),a("h3",{attrs:{id:"_2-2-x-2、dce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-x-2、dce"}},[t._v("#")]),t._v(" 2-2-X-2、DCE")]),t._v(" "),a("p",[a("strong",[a("u",[a("em",[t._v("DCE—dead code elimination")])])]),t._v("，消除无用代码；无用代码消除广泛存在于传统的编程语言编译器中，编译器可判断出哪些代码根本不影响输出，从而消除此部分代码，此称为 DCE，而 Tree-shaking 是 DCE 的新实现；")]),t._v(" "),a("ul",[a("li",[t._v("JS 绝大多数情况都需通过网络加载，然后执行，加载文件越小，整体执行时间越短，故消除无用代码减少体积对 JS 非常有意义；")]),t._v(" "),a("li",[t._v("JS DCE—Tree-shaking 与 传统 DCE 不一样，后者消除不可能执行的代码，前者关注于去除没有用到的代码；")])]),t._v(" "),a("h3",{attrs:{id:"_2-2-x-2-1、tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-x-2-1、tree-shaking"}},[t._v("#")]),t._v(" 2-2-X-2-1、Tree-Shaking")]),t._v(" "),a("p",[a("u",[t._v("DeadCode")]),t._v(" 几个特征：")]),t._v(" "),a("ul",[a("li",[t._v("代码不会被执行，不可到达；")]),t._v(" "),a("li",[t._v("代码执行结果不会被用到；")]),t._v(" "),a("li",[t._v("代码只影响死变量(只写不读)；")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200918181216.png",align:""}})])]),t._v(" "),a("p",[t._v("传统编译型的语言中，均由编译器将 "),a("u",[t._v("Dead Code")]),t._v(" 从 AST 中删除；")]),t._v(" "),a("p",[t._v("而 JS 中 DCE 是由代码压缩优化工具 uglify 完成；")]),t._v(" "),a("ul",[a("li",[t._v("示例：均未增加 uglify 处理、未进行 DCE 的 rollup 和 webpack：\n"),a("ul",[a("li",[t._v("现象：rollup 将无用代码 foo 和 unused 函数消除，但仍保留了不会执行到的代码，而 webpack 完整保留所有代码；")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200918181217.png",align:""}})])])]),t._v(" "),a("li",[t._v("示例：增加 uglify 处理、进行了 DCE 的 rollup 和 webpack：\n"),a("ul",[a("li",[t._v("现象：中间是两者增加 uglify 的配置文件，右侧是两者输出结果：")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200918181218.png",align:""}})])])])]),t._v(" "),a("h3",{attrs:{id:"_2-2-x-2-2、tree-shaking-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-x-2-2、tree-shaking-原理"}},[t._v("#")]),t._v(" 2-2-X-2-2、Tree-Shaking 原理")]),t._v(" "),a("p",[a("u",[a("em",[a("strong",[t._v("Tree-shaking 的消除原理依赖于 ES6 的模块特性，即要使用 ES6 module syntax 才可 Tree-shaking")])])]),t._v("；其特点：")]),t._v(" "),a("ul",[a("li",[t._v("仅能作为模块顶层的语句出现；")]),t._v(" "),a("li",[t._v("import 的模块名只能是字符串变量；")]),t._v(" "),a("li",[t._v("import binding 是 immutable 的；")])]),t._v(" "),a("p",[t._v("ES6 模块依赖关系是确定的、与运行时的状态无关，可进行可靠的静态分析，此亦乃 Tree-shaking 实现基础：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("静态分析：即不执行代码，从字面量对代码进行分析；")])]),t._v(" "),a("li",[a("p",[t._v("比如：反例：ES6 前的模块化方案：动态 require 某模块时，只有执行后才知道引用了什么模块；")])]),t._v(" "),a("li",[a("p",[t._v("函数的 tree-shaking 验证：去除无用函数")]),t._v(" "),a("ul",[a("li",[t._v("现象：rollup 与 webpack 操作的结果均无无用函数 get，很好；")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200918181219.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v("类的 tree-shaking 验证：去除无用类")]),t._v(" "),a("ul",[a("li",[t._v("现象：rollup 与 webpack 操作的结果均包含了无用类的整体代码...；")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://i.loli.net/2020/09/07/8LHAQ4okgbREGsY.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v("原因：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("rollup 只能处理函数和顶层的 import/export 变量，无法将无用到的类方法去除；")])]),t._v(" "),a("li",[a("p",[t._v("js 动态语言的特性使得静态分析艰难；")])]),t._v(" "),a("li",[a("p",[t._v("SideEffect(副作用) 广泛存在(无法判断真正有用无用代码，删除有效代码)")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SideEffect")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ex1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Menu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Menu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array 扩展")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 array 中的重复元素去除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" Menu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若删除 menu.js，则对 Array 扩展也会被删除，就会影响功能")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ex2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Menu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Menu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("show")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Arr'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ay'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Array'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Menu\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("unique")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 array 中的重复元素去除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" Menu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])])]),t._v(" "),a("li",[a("p",[t._v("总结：Tree-shaking 对顶层纯函数的效果好，其余处理效果不佳；")]),t._v(" "),a("ul",[a("li",[t._v("函数的 SideEffect 相对较少、顶层函数相对更容易分析、而 babel 默认严格模式，减少顶层函数的动态访问方式也更容易分析；")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-2-x-2-3、closure-compiler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-x-2-3、closure-compiler"}},[t._v("#")]),t._v(" 2-2-X-2-3、Closure compiler")]),t._v(" "),a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://i.loli.net/2020/09/07/3APxNB96Gn14sit.png",align:""}}),t._v(" "),a("p",[t._v("现象：完美实现 Tree Shaking；")]),t._v(" "),a("p",[t._v("注意：完美结果是需要条件的，那就是 cc 的侵入式约束规范；必须在代码里添加这样的代码；")]),t._v(" "),a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://i.loli.net/2020/09/07/3APxNB96Gn14sit.png",align:""}}),t._v(" "),a("p",[t._v("总结：Google 定义一整套注解规范 "),a("u",[a("em",[t._v("Annotating JavaScript for the Closure Compiler")])]),t._v("，侵入式让人不爽，且 Google Closure Compiler 是 java 写的，而与基于 node 的各种构建库不太兼容(目前已有 nodejs 版 Closure Compiler)，Closure Compiler 使用较麻烦，迁移成本较大；")]),t._v(" "),a("h3",{attrs:{id:"_2-2-y、构建工具的选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-y、构建工具的选择"}},[t._v("#")]),t._v(" 2-2-Y、构建工具的选择")]),t._v(" "),a("img",{staticStyle:{zoom:"40%"},attrs:{src:"https://i.loli.net/2020/09/07/SKbEdZ5nOl4uGBs.png",align:""}}),t._v(" "),a("p",[t._v("Webpack 和 Rollup 在不同场景下，都能发挥自身优势作用；")]),t._v(" "),a("ul",[a("li",[t._v("webpack 作为打包工具，但是在定义模块输出的时候，webpack确不支持ESM，webpack插件系统庞大，确实有支持模块级的 Tree-Shacking 的插件，如webpack-deep-scope-analysis-plugin；")]),t._v(" "),a("li",[t._v("rollup 支持程序流分析，能更加正确的判断项目本身的代码是否有副作用，其实就是 rollup 的 tree-shaking 更干净；")]),t._v(" "),a("li",[t._v("结论：rollup 比较适合打包 js 的 sdk 或者封装的框架等，例如，vue 源码就是 rollup 打包的；而 webpack 较适合打包一些应用，例如 SPA 或同构项目等；")])])])}),[],!1,null,null,null);s.default=e.exports}}]);