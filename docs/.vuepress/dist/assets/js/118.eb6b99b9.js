(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{514:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"三、数据转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、数据转换"}},[t._v("#")]),t._v(" 三、数据转换")]),t._v(" "),a("h2",{attrs:{id:"_3-1、基本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、基本"}},[t._v("#")]),t._v(" 3-1、基本")]),t._v(" "),a("h3",{attrs:{id:"_3-1-1、基本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1、基本"}},[t._v("#")]),t._v(" 3-1-1、基本")]),t._v(" "),a("p",[t._v("JS 中通常将，类型转换/强制类型转换，统称为，强制类型转换；")]),t._v(" "),a("ul",[a("li",[t._v("分类：表现不明显的隐式强制类型转换、表现明显的显式强制类型转换；")])]),t._v(" "),a("p",[t._v("JS 中强制类型转换总是返回基本类型值；")]),t._v(" "),a("ul",[a("li",[t._v("比如：字符串、数字、布尔值，但注意不会返回对象&函数；")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-2、内部流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2、内部流程"}},[t._v("#")]),t._v(" 3-1-2、内部流程")]),t._v(" "),a("h3",{attrs:{id:"_3-1-2-1、toprimitive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-1、toprimitive"}},[t._v("#")]),t._v(" 3-1-2-1、ToPrimitive")]),t._v(" "),a("p",[t._v("原始值则直接输出；否则对象流程如下：")]),t._v(" "),a("ul",[a("li",[t._v("首先：调用 valueOf，若结果为基本类型值，则输出；")]),t._v(" "),a("li",[t._v("否则：调用 toString，若结果为基本类型值，则输出；")]),t._v(" "),a("li",[t._v("注意：其余抛出 TypeError 异常；")]),t._v(" "),a("li",[t._v("注意：用 Object.create(null) 创建出来的对象，[[Prototype]] 属性为null，没有 valueOf、toString 方法")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-2-2、toboolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-2、toboolean"}},[t._v("#")]),t._v(" 3-1-2-2、ToBoolean")]),t._v(" "),a("p",[t._v("假值为 false；其他值为 true；")]),t._v(" "),a("ul",[a("li",[t._v("比如："),a("strong",[a("u",[t._v("undefined、null、false、+0、-0、NaN、空字符串、浏览器自行添加的假值对象")])]),t._v("；")]),t._v(" "),a("li",[t._v("注意：浏览器在某些特定的情况下，会建立别的假值对象，目的是为了判断是否为老版本的浏览器，如 document.all；")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-2-3、tonumber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-3、tonumber"}},[t._v("#")]),t._v(" 3-1-2-3、ToNumber")]),t._v(" "),a("p",[t._v("对象值：进行 ToPrimitive 转换；")]),t._v(" "),a("p",[t._v("特殊值："),a("strong",[a("u",[t._v("null -> 0、false -> 0、true -> 1、undefined -> NaN")])]),t._v("；")]),t._v(" "),a("p",[t._v("普通值：String 类型，遵循数字常量相关规则/语法，处理失败时转为 NaN；")]),t._v(" "),a("ul",[a("li",[t._v('比如：空字符串 -> 0、"1A" -> NaN；')])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145913.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-1-2-4、tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-4、tostring"}},[t._v("#")]),t._v(" 3-1-2-4、ToString")]),t._v(" "),a("p",[t._v("普通值：直接输出字符串；")]),t._v(" "),a("p",[t._v("特殊值："),a("strong",[a("u",[t._v('null -> "null"、undefined -> "undefined"、true -> "true"、(1.07*10^21).toString() -> "1.07e21"')])])]),t._v(" "),a("p",[t._v("对象值：普通对象：调用内部 toString()，返回内部属性 [[Class]] 的值，(自定义方法的另计)；")]),t._v(" "),a("p",[t._v('对象值：数组对象：同上，但数组 toString 经重新定义，所有元素字符串化会以逗号连接：比如：[1,2,3].toString() -> "1,2,3')]),t._v(" "),a("ul",[a("li",[t._v("注意："),a("strong",[a("u",[t._v("JSON.stringify() 转换过程使用了 toString；")])]),t._v(" "),a("ul",[a("li",[t._v("对特殊值的处理：undefined、function、symbol、包含循环引用的对象：\n"),a("ul",[a("li",[t._v("或报错：循环引用的对象；")]),t._v(" "),a("li",[t._v("或忽略跳过：对象中的值；")]),t._v(" "),a("li",[t._v("或返回 null：Symbol、空函数、undefined")]),t._v(" "),a("li",[t._v("或返回 string：循环引用的对象且有 toJSON 方法；")])])]),t._v(" "),a("li",[t._v("对原始值处理：string、number、boolean、 null 与 toString 基本一致；")]),t._v(" "),a("li",[t._v("对对象值处理：先调用内部 toJSON()，再调用 toString()；")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145914.png",align:""}})]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145915.png",align:""}})])])]),t._v(" "),a("li",[t._v("注意：字符串转数字方式："),a("strong",[a("u",[t._v("*(/)、parseInt()、 parseFloat()、Number() 、new Number()")])]),t._v(" "),a("ul",[a("li",[t._v("其中 parse 前缀方法是解析，其余才是转换；")]),t._v(" "),a("li",[t._v("两者区别：对非字符串部分的容忍度不同：Number 可用于任何数据类型，new Number 对于同样的输入会有返回不同结果；")]),t._v(" "),a("li",[t._v("性能比较："),a("strong",[a("u",[t._v("*(/) > Number > parseInt / parseFloat > new Number")])])])])])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145916.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-1-3、注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3、注意事项"}},[t._v("#")]),t._v(" 3-1-3、注意事项")]),t._v(" "),a("h3",{attrs:{id:"_3-1-3-1、条件控制语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-1、条件控制语句"}},[t._v("#")]),t._v(" 3-1-3-1、条件控制语句")]),t._v(" "),a("ul",[a("li",[t._v("if while do-while()语句内部，会对值进行 ToBoolean 操作；")]),t._v(" "),a("li",[t._v("isNaN 参数会先经过 toNumber 操作(故不可靠)；")]),t._v(" "),a("li",[t._v("for( ..; ..; ..; )中的条件判断表达式，第二个；")]),t._v(" "),a("li",[t._v("? : 中的条件判断表达式；")]),t._v(" "),a("li",[t._v("if 中的条件判断表达式；")]),t._v(" "),a("li",[t._v("|| 和 && 左边的操作数；")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("isNaN('1') // false\n")])])]),a("h3",{attrs:{id:"_3-1-3-2、toprimitive-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-2、toprimitive-操作"}},[t._v("#")]),t._v(" 3-1-3-2、ToPrimitive 操作")]),t._v(" "),a("ul",[a("li",[t._v("选择机制优先度(一般值)：valueOf > toString：\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145917.png",align:""}})])])]),t._v(" "),a("li",[t._v("选择机制优先度(Date对象)：valueOf < toString：若强制使用 Date 的 valueOf，则须使用一元加号 (+)，强制转换它为数字类型：\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145918.png",align:""}})])])]),t._v(" "),a("li",[t._v("强制将某对象的 valueOf、toString 方法，均覆写为返回值为对象会报错；\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145919.png",align:""}})])])]),t._v(" "),a("li",[t._v("引入 Symbol 类型后，JS 会优先调用对象的 [Symbol.toPrimitive]，来转为原始类型：\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145920.png",align:""}})]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145921.png",align:""}})])])]),t._v(" "),a("li",[t._v("空对象与空数组的 valueOf & toString 方法；\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145922.png",align:""}})])])]),t._v(" "),a("li",[t._v("特殊：引擎会将 花括号开头 { 视为一个区块语句的开头而忽略掉；\n"),a("ul",[a("li",[t._v('故例1实际效果为+{} 但不同浏览器引擎对此种处理不一致，有些返回 NaN，有些返回 "[object Object][object Object]"')]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145923.png",align:""}})])])]),t._v(" "),a("li",[t._v("其他示例\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145924.png",align:""}})])])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-3-3、json-stringify-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-3、json-stringify-操作"}},[t._v("#")]),t._v(" 3-1-3-3、JSON.stringify 操作")]),t._v(" "),a("ul",[a("li",[t._v("空函数、undefined、Symbol 返回 null、循环引用报错、含 toJSON 则调用\n"),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145925.png",align:""}})])])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-3-4、tostring-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-4、tostring-操作"}},[t._v("#")]),t._v(" 3-1-3-4、ToString 操作")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145926.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-1-3-5、tonumber-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-5、tonumber-操作"}},[t._v("#")]),t._v(" 3-1-3-5、ToNumber 操作")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("+ 操作符转换规则：")]),t._v(" "),a("ul",[a("li",[t._v("一有对象，则进行 toPrimitive 操作，即 valueOf toString；")]),t._v(" "),a("li",[t._v("一有字符，则进行字符串拼接；")]),t._v(" "),a("li",[t._v("若均没有，则进行加法运算；\n"),a("ul",[a("li",[t._v("注意：操作符的顺序；比如：1+2+'3' == '33'； 1+'2'+3 == '123'；")]),t._v(" "),a("li",[t._v("注意：+ Date对象，转换成数字，从而获得当前时间的时间戳(微秒)；")]),t._v(" "),a("li",[t._v("注意：\"x + ''  相当于 String(x)")]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145927.png",align:""}})]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145928.png",align:""}})])])])])]),t._v(" "),a("li",[a("p",[t._v("+ 操作符不一定返回 number，但 ++ 操作符一定返回 number")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("+ x 或 x - 0 或 x * 1 或 x / 1 相当于 Number( x ) ；且 ++ 加变量，而不能加常量；")]),t._v(" "),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145929.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v("null 在计算时候转换为0，效果等同 0；")]),t._v(" "),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145930.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v(">、<、<=、>= 转换规则；")]),t._v(" "),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145931.png",align:""}})]),t._v(" "),a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145932.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v("~x 相当于 -(x+1)；!!x 相当于 Boolean( x )；")]),t._v(" "),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145933.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v("其他示例：")]),t._v(" "),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145934.png",align:""}})])])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-3-6、-和-转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-6、-和-转换"}},[t._v("#")]),t._v(" 3-1-3-6、&&  和 || 转换")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("&& 前假返前，前真返后，亦称守护运算符")]),t._v(" "),a("ul",[a("li",[t._v('只要 "&&" 前面是 false，无论 "&&" 后面是 true 还是 false，结果都将返 "&&" 前面的值；')]),t._v(" "),a("li",[t._v('只要 "&&" 前面是 true，无论 "&&" 后面是 true 还是 false，结果都将返 "&&" 后面的值；\n'),a("ul",[a("li",[t._v("所以：a && b 大致相当于 a ? b : a；")]),t._v(" "),a("li",[t._v("比如：1&&2 返回 2")])])])])]),t._v(" "),a("li",[a("p",[t._v("|| 前假返后，前真返前")]),t._v(" "),a("ul",[a("li",[t._v('只要"||"前面为 false，不管"||"后面是 true 还是 false，都返回"||"后面的值；')]),t._v(" "),a("li",[t._v('只要"||"前面为 true，不管"||"后面是 true 还是 false，都返回"||"前面的值；\n'),a("ul",[a("li",[t._v("所以：a || b 大致相当于  a ? a : b")]),t._v(" "),a("li",[t._v("比如：0||1  返回 1")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-1-3-x、其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-x、其他"}},[t._v("#")]),t._v(" 3-1-3-X、其他")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145935.png",align:""}}),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145936.png",align:""}}),t._v(" "),a("h2",{attrs:{id:"_3-x、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-x、总结"}},[t._v("#")]),t._v(" 3-X、总结")]),t._v(" "),a("h3",{attrs:{id:"_3-1-1、基本-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1、基本-2"}},[t._v("#")]),t._v(" 3-1-1、基本")]),t._v(" "),a("p",[t._v("JS中，类型转换只有三种：")]),t._v(" "),a("ul",[a("li",[t._v("转换成数字")]),t._v(" "),a("li",[t._v("转换成布尔值")]),t._v(" "),a("li",[t._v("转换成字符串")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145937.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-1-2、运算符转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2、运算符转换"}},[t._v("#")]),t._v(" 3-1-2、运算符转换")]),t._v(" "),a("p",[t._v("JS 中在使用运算符号或者对比符时，会自带隐式转换，规则如下:")]),t._v(" "),a("ul",[a("li",[t._v("-、*、/、% ：一律转换成数值后计算")]),t._v(" "),a("li",[t._v("+：\n"),a("ul",[a("li",[t._v("数字 + 字符串 = 字符串， 运算顺序是从左到右")]),t._v(" "),a("li",[t._v("数字 + 对象， 优先调用对象的"),a("code",[t._v("valueOf")]),t._v(" -> "),a("code",[t._v("toString")])]),t._v(" "),a("li",[t._v("数字 + "),a("code",[t._v("boolean/null")]),t._v(" -> 数字")]),t._v(" "),a("li",[t._v("数字 + "),a("code",[t._v("undefined")]),t._v(" -> "),a("code",[t._v("NaN")])])])]),t._v(" "),a("li",[a("code",[t._v("[1].toString() === '1'")])]),t._v(" "),a("li",[a("code",[t._v("{}.toString() === '[object object]'")])]),t._v(" "),a("li",[a("code",[t._v("NaN")]),t._v(" !== "),a("code",[t._v("NaN")]),t._v(" 、"),a("code",[t._v("+undefined 为 NaN")])])]),t._v(" "),a("h2",{attrs:{id:"_3-2、相等性判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、相等性判断"}},[t._v("#")]),t._v(" 3-2、相等性判断")]),t._v(" "),a("h3",{attrs:{id:"_3-2-1、js-4种相等算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1、js-4种相等算法"}},[t._v("#")]),t._v(" 3-2-1、JS 4种相等算法")]),t._v(" "),a("p",[t._v("抽象相等比较、严格相等比较、同值零、同值( 用于所有其他地方)")]),t._v(" "),a("ul",[a("li",[t._v("第二种：Array.prototype.indexOf、Array.prototype.lastIndexOf、case-matching 使用到；")]),t._v(" "),a("li",[t._v("第三种：%TypedArray%、ArrayBuffer 构造函数、Map、Set操作、String.prototype.includes 使用到；")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-2、js3种值比较操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2、js3种值比较操作"}},[t._v("#")]),t._v(" 3-2-2、JS3种值比较操作")]),t._v(" "),a("p",[t._v("严格相等、宽松相等、"),a("a",{attrs:{href:"http://Object.is",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.is"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_3-2-3、双等判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3、双等判断"}},[t._v("#")]),t._v(" 3-2-3、双等判断")]),t._v(" "),a("p",[t._v("特点：值相等；进行类型转换操作，转换规则如下")]),t._v(" "),a("ul",[a("li",[t._v("两边类型是否相同，相同则比较值是否相同；")]),t._v(" "),a("li",[t._v("若类型是 null 和 undefined，则返回 true；")]),t._v(" "),a("li",[t._v("若其中一方是 Boolean、String，且另一方为 Number，则将 Boolean、String 转换成 Number，再进行比较；")]),t._v(" "),a("li",[t._v("若其中一方为 Object，且另一方为 String、Number、Symbol，则将 Object 转换成字符串，再进行比较；\n"),a("ul",[a("li",[a("strong",[a("u",[t._v("对象转原始类型")])]),t._v("：会调用内置的 [ToPrimitive] 函数，函数操作逻辑如下：\n"),a("ul",[a("li",[t._v("若存在 Symbol.toPrimitive() 方法，则优先调用并返回；")]),t._v(" "),a("li",[t._v("调用 valueOf，若转换为原始类型，则返回；")]),t._v(" "),a("li",[t._v("调用 toString，若转换为原始类型，则返回；")]),t._v(" "),a("li",[t._v("注意：若上述方法均无返回原始类型，会报错；")])])])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ex1:")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Object]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ex2:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPrimitive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出7")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ex3:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ex4:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// == 中，左右两边都需要转换为数字然后进行比较。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [] 转换为数字为 0；")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ![] 首先是转换为布尔值，由于 [] 作为一个引用类型转换为布尔值为 true, 因此 ![] 为 false，进而在转换成数字，变为 0")]),t._v("\n")])])]),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145938.png",align:""}}),t._v(" "),a("ul",[a("li",[t._v("其他：数组，调用valueOf、再调用toString，比如：空数组转为空字符串，再转换为数字0；")]),t._v(" "),a("li",[t._v("其他：null 与 undefined 相等，不会做隐式类型转换；")]),t._v(" "),a("li",[t._v("其他：转换优先级：对象 > 布尔值 > 字符串；")]),t._v(" "),a("li",[t._v("其他：遇到 ! 先使用 toBoolean 转换；")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145939.png",align:""}}),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145940.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-2-4、三等判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4、三等判断"}},[t._v("#")]),t._v(" 3-2-4、三等判断")]),t._v(" "),a("p",[t._v("特点：严格相等；不进行类型转换、先后比较类型和值")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145941.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-2-5、object-is"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5、object-is"}},[t._v("#")]),t._v(" 3-2-5、Object.is")]),t._v(" "),a("p",[t._v("行为与全等类似，但只用于 NaN 和 -0 和 +0 的特殊用途判断：")]),t._v(" "),a("p",[t._v("Object 在严格等于的基础上修复了一些特殊情况下的失误，具体来说就是 +0 和 -0，NaN 和 NaN；")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145942.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-2-6、总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6、总结"}},[t._v("#")]),t._v(" 3-2-6、总结")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145943.png",align:""}}),t._v(" "),a("h3",{attrs:{id:"_3-2-7、示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-7、示例"}},[t._v("#")]),t._v(" 3-2-7、示例")]),t._v(" "),a("ul",[a("li",[t._v("示例1：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// title")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Way1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由对象的隐式转换 toPrimitive 操作机制知，用自增改动 valueOf 即可")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Way2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接定义 get ；此外此法还适用于：(a === 1 && a === 2 && a ===3)")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("global"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Way3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由对象的隐式转换 toPrimitive 操作机制知，用 Generator 改动 valueOf ；")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  gn"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Way4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接重定义 toPrimitive 操作；")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" Symbool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPromitive "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__val__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__val__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Way5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象 -> toPrimitive操作 -> toString -> ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：数组对象，toString 方法返回字符串，元素由逗号隔开；")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shift"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("示例2：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 题1和题2左右均被转成数字   ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 题3被转成boolean   ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 题4 地址不一样，两 Object 双等即全等比较，比较的是地址；")]),t._v("\n")])])]),a("h2",{attrs:{id:"四、优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、优先级"}},[t._v("#")]),t._v(" 四、优先级")]),t._v(" "),a("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145944.png",align:""}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("JS 表达式包含表达式时，运算顺序是从左至右；")])]),t._v(" "),a("li",[a("p",[t._v("加号优先级 > 三目运算符")]),t._v(" "),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145945.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v("模数运算保留符号，注意后2个，前者结果为-1，后者结果为NaN")]),t._v(" "),a("ul",[a("li",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145946.png",align:""}})])])]),t._v(" "),a("li",[a("p",[t._v("! 优先级 > in")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("++ 优先级 > ==")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("三目运算符优先级 > 赋值运算符；")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])])])])]),t._v(" "),a("h2",{attrs:{id:"五、自测题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、自测题"}},[t._v("#")]),t._v(" 五、自测题")]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145947.png",align:""}}),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145948.png",align:""}}),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://leibnize-picbed.oss-cn-shenzhen.aliyuncs.com/img/20200919145949.png",align:""}}),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出 "" 空字符串')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出的是空字符串""， 包装类型在运算的时候，会先调用valueOf方法，如果valueOf返回的还是包装类型，那么再调用toString方法')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 还是 数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 数组 toString 默认会将数组各项使用逗号 "," 隔开, 比如 [1,2,3].toSting 变成了"1,2,3",空数组 toString 就是空字符串')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" val1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// val1 是空字符串")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出 "[object Object]"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个输出 false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 套用上面第三条 将 false 转换为 数值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个输出 0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包装类型与 基本类型 == 先将包装类型通过 valueOf toString 转换为基本类型 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 输出 ""')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 套用第2条， 将空字符串转换为数值、")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 0")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4、")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个基本类型相加，如果其中一方是字符，则将其他的转换为字符相加，否则将类型转换为Number,然后相加, Number(true) 是1, Number(false)是0, 所以结果是 1")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);