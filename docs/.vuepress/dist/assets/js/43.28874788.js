(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{368:function(r,e,t){"use strict";t.r(e);var a=t(42),n=Object(a.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h3",{attrs:{id:"一、查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、查找"}},[r._v("#")]),r._v(" 一、查找")]),r._v(" "),t("p",[r._v("查找是计算机中最基本也是最有用的算法之一。 它描述了在有序集合中搜索特定值的过程；")]),r._v(" "),t("h4",{attrs:{id:"_1-1、二分查找-binarysearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、二分查找-binarysearch"}},[r._v("#")]),r._v(" 1-1、二分查找-BinarySearch")]),r._v(" "),t("p",[r._v("二分查找维护查找空间的左、右和中间指示符，并比较查找目标或将查找条件应用于集合的中间值；如果条件不满足或值不相等，则清除目标不可能存在的那一半，并在剩下的一半上继续查找，直到成功为止。如果查以空的一半结束，则无法满足条件，并且无法找到目标。")]),r._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Algorithm/Search/1.png"}}),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/algorithm/%E6%9F%A5%E6%89%BE/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E6%9F%A5%E6%89%BE.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("二维数组查找"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/algorithm/%E6%9F%A5%E6%89%BE/%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html#%E9%A2%98%E7%9B%AE",target:"_blank",rel:"noopener noreferrer"}},[r._v("旋转数组的最小数字"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E6%95%B0%E7%BB%84/%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E6%95%B0%E5%AD%97.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("在排序数组中查找数字"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/sqrtx/?utm_source=LCUS&utm_medium=ip_redirect_q_uns&utm_campaign=transfer2china",target:"_blank",rel:"noopener noreferrer"}},[r._v("x 的平方根"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/guess-number-higher-or-lower/",target:"_blank",rel:"noopener noreferrer"}},[r._v("猜数字大小"),t("OutboundLink")],1)])]),r._v(" "),t("h4",{attrs:{id:"_1-2、bfs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、bfs"}},[r._v("#")]),r._v(" 1-2、BFS")]),r._v(" "),t("p",[r._v("广度优先搜索，是一种遍历或搜索数据结构(比如树或图)的算法，也可在更抽象的场景中使用；其特点是：越是接近根结点的结点将越早地遍历；比如，可使用 BFS 找到从起始结点到目标结点的路径，特别是最短路径；注意：BFS 中，结点的处理顺序，与它们添加到队列的顺序是完全相同的顺序，即先进先出，故广度优先搜索一般使用队列实现；")]),r._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Algorithm/Search/2.png"}}),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("从上到下打印二叉树"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/word-ladder/",target:"_blank",rel:"noopener noreferrer"}},[r._v("单词接龙"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/employee-importance/",target:"_blank",rel:"noopener noreferrer"}},[r._v("员工的重要性"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/number-of-islands/",target:"_blank",rel:"noopener noreferrer"}},[r._v("岛屿数量"),t("OutboundLink")],1)])]),r._v(" "),t("h4",{attrs:{id:"_1-3、dfs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、dfs"}},[r._v("#")]),r._v(" 1-3、DFS")]),r._v(" "),t("p",[r._v("深度优先搜索，是一种遍历或搜索数据结构(比如树或图)的算法，也可在更抽象的场景中使用；但与 BFS 不同，更早访问的结点可能不是更靠近根结点的结点。因此在 DFS 中找到的第一条路径"),t("u",[r._v("可能不是")]),r._v("最短路径；DFS中，结点的处理顺序，是完全相反的顺序，就像它们被添加到栈中一样，是后进先出，故深度优先搜索一般使用栈实现；")]),r._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"/Image/Algorithm/Search/2.png"}}),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("二叉树的中序遍历"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("二叉树的最大深度"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/path-sum/",target:"_blank",rel:"noopener noreferrer"}},[r._v("路径总和"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/course-schedule/",target:"_blank",rel:"noopener noreferrer"}},[r._v("课程表"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/number-of-islands/",target:"_blank",rel:"noopener noreferrer"}},[r._v("岛屿数量"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);